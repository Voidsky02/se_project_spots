!function(){"use strict";const e={modalSelector:".modal",formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?o(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},o=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)};function n(e,t,r="Save",o="Saving..."){e.textContent=t?o:r}function a(e){e.classList.add("modal_opened"),document.addEventListener("keydown",c)}function s(e){e.classList.remove("modal_opened"),l()}const c=e=>{"Escape"===e.key&&s(document.querySelector(".modal_opened"))},l=()=>{document.removeEventListener("keydown",c)},i=document.querySelector("#edit-modal"),d=document.querySelector(".profile__edit-btn"),u=document.querySelector("#profile__close-btn");d.addEventListener("click",(()=>{var r,o;q.value=b.textContent,E.value=p.textContent,r=i,o=e,[q,E].forEach((e=>{t(r,e,o)})),a(i)})),u.addEventListener("click",(()=>{s(i)}));const m=document.querySelector("#new-post__modal"),_=document.querySelector(".profile__add-btn"),h=document.querySelector("#new-post__close-btn");_.addEventListener("click",(()=>{a(m)})),h.addEventListener("click",(()=>{s(m)}));const v=document.querySelector("#preview__modal"),y=document.querySelector(".modal__img_type_preview"),f=document.querySelector(".modal__title_type_preview");document.querySelector(".modal__close-btn_type_preview").addEventListener("click",(()=>{s(v)}));const S=document.querySelector(".profile__avatar"),b=document.querySelector(".profile__name"),p=document.querySelector(".profile__description"),q=document.querySelector("#name"),E=document.querySelector("#description");document.forms.profile__modal_form.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;n(t,!0),N.editUserInfo({name:q.value,about:E.value}).then((e=>{b.textContent=e.name,p.textContent=e.about,s(i)})).catch((e=>{console.error(e)})).finally((()=>{n(t,!1)}))}));const k=document.querySelector("#card-template"),L=document.querySelector(".cards__list");function g(e){const t=k.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__like-btn");r.addEventListener("click",(t=>{!function(e,t){const r=e.target.classList.contains("card__like-btn-selected");N.changeLikeStatus(t,r).then((()=>{e.target.classList.toggle("card__like-btn-selected")})).catch((e=>{console.error(e)}))}(t,e._id)})),!0===e.isLiked&&r.classList.add("card__like-btn-selected"),t.querySelector(".card__delete-btn").addEventListener("click",(()=>{!function(e,t){H=e,z=t,a($)}(t,e._id)}));const o=t.querySelector(".card__title"),n=t.querySelector(".card__image");return o.textContent=e.name,n.src=e.link,n.alt=e.name,n.addEventListener("click",(()=>{a(v),y.src=e.link,y.alt=e.name,f.textContent=e.name})),t}var C;document.querySelectorAll(".modal").forEach((e=>{e.addEventListener("mousedown",(t=>{t.target.classList.contains("modal")&&s(e)}))})),C=e,document.querySelectorAll(C.formSelector).forEach((e=>{((e,o)=>{const n=Array.from(e.querySelectorAll(o.inputSelector)),a=e.querySelector(o.submitButtonSelector);r(n,a,o),n.forEach((s=>{s.addEventListener("input",(function(){((e,r,o)=>{r.validity.valid?t(e,r,o):((e,t,r,o)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(o.inputErrorClass)})(e,r,r.validationMessage,o)})(e,s,o),r(n,a,o)}))}))})(e,C)}));const $=document.querySelector("#delete-modal"),j=$.querySelector("#delete__close-btn"),U=$.querySelector("#cancel-btn"),P=$.querySelector("#delete-form");j.addEventListener("click",(()=>{s($)})),U.addEventListener("click",(()=>{s($)})),P.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;n(t,!0,"Delete","Deleting..."),N.deleteCard(z).then((()=>{H.remove(),s($)})).catch((e=>{console.error(e)})).finally((()=>{n(t,!1,"Delete")}))}));const w=document.querySelector(".profile__avatar-btn"),x=document.querySelector("#avatar-modal"),A=x.querySelector(".modal__form"),D=x.querySelector(".modal__submit-btn"),I=x.querySelector("#profile-avatar-input"),T=x.querySelector("#avatar__close-btn");w.addEventListener("click",(()=>{a(x)})),T.addEventListener("click",(()=>{s(x)})),A.addEventListener("submit",(function(t){t.preventDefault();const r=t.submitter;n(r,!0),N.editAvatar(I.value).then((r=>{S.src=r.avatar,s(x),t.target.reset(),o(D,e)})).catch((e=>{console.error(e)})).finally((()=>{n(r,!1)}))}));const N=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addNewPost({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}changeLikeStatus(e,t){const r=t?"DELETE":"PUT";return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:r,headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"2614c96a-b56e-4551-baaa-15c592c84c27","Content-Type":"application/json"}});N.getAppInfo().then((([e,t])=>{e.forEach((e=>{const t=g(e);L.prepend(t)})),S.src=t.avatar,b.textContent=t.name,p.textContent=t.about})).catch((e=>{console.error(e)}));const B=m.querySelector(".modal__submit-btn"),O=document.querySelector("#image-link"),J=document.querySelector("#image-caption");let H,z;document.querySelector("#new-post__modal_form").addEventListener("submit",(function(t){t.preventDefault(),n(B,!0),N.addNewPost({name:`${J.value}`,link:`${O.value}`}).then((r=>{const n=g(r);L.prepend(n),s(m),t.target.reset(),o(B,e)})).catch((e=>{console.error(e)})).finally((()=>{n(B,!1)}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,